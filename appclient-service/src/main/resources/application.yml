server:
  port: 8080
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

spring:
  data:
    redis:
      host: ${app.redis.host}
      port: ${app.redis.port}
      database: 0
      username: ${app.redis.username}
      password: ${app.redis.password}

  cache:
    type: ${app.cache.type}
    cache-names: ${app.cache.names}

  threads:
    virtual:
      enabled: true


management:
  health:
    circuitbreakers:
      enabled: true
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  endpoint:
    health:
      show-details: always
      probes.enabled: true
  endpoints:
    web:
      exposure:
        include: health, metrics

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 8
      minimumNumberOfCalls: 4
      permittedNumberOfCallsInHalfOpenState: 10
      waitDurationInOpenState: 10s
      failureRateThreshold: 50
      slowCallRateThreshold: 70
      slowCallDurationThreshold: 2_000
  instances:
    employee-name:
      baseConfig: default
    employee-address:
      baseConfig: default
    employee-phone:
      baseConfig: default

resilience4j.retry:
  configs:
    default:
      maxAttempts: 3
      waitDuration: 250
      enableExponentialBackoff: true
      exponentialBackoffMultiplier: 2
  instances:
    employee-name:
      baseConfig: default
    employee-address:
      baseConfig: default
    employee-phone:
      baseConfig: default

resilience4j.bulkhead:
  configs:
    default:
      maxConcurrentCalls: 25
      maxWaitDuration: 100
  instances:
    employee-name:
      baseConfig: default
    employee-address:
      baseConfig: default
    employee-phone:
      baseConfig: default

app:
  cache:
    type: redis
    names: employee-name,employee-address,employee-phone
    ttl: ${REDIS_CACHE_TTL:15m}

  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    username: ${REDIS_USERNAME:default}
    password: ${REDIS_PASSWORD:password}


  http-client:
    employee-name:
      baseUrl: ${EMPLOYEE_NAME_BASEURL:http://localhost:8083}
      readTimeout: ${EMPLOYEE_NAME_TIMEOUT:2s}
    employee-address:
      baseUrl: ${EMPLOYEE_ADDRESS_BASEURL:http://localhost:8081}
      readTimeout: ${EMPLOYEE_ADDRESS_TIMEOUT:2s}
    employee-phone:
      baseUrl: ${EMPLOYEE_PHONE_BASEURL:http://localhost:8082}
      readTimeout: ${EMPLOYEE_PHONE_TIMEOUT:2s}